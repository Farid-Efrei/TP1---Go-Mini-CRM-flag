Mini-CRM CLI ‚Äî TP1 GOlang (EFREI - Golang)

Description:
Ce petit projet est mon premier exercice en Go pour le cours de Golang √† l'EFREI. Il s'agit d'un mini-CRM en ligne de commande permettant de g√©rer des contacts (ID, Nom, Email) en m√©moire.

Fonctionnalit√©s impl√©ment√©es:
- Menu principal en boucle (interactive).
- Ajouter un contact (l'utilisateur saisit Nom + Email).
- Lister tous les contacts.
- Supprimer un contact par son ID.
- Mettre √† jour un contact (par ID).
- Quitter l'application.
- Ajouter un contact directement via flags CLI :
  --ajouter --nom="Nom" --email="email@example.com"

Fichiers:
- main.go : impl√©mentation compl√®te du CLI et des op√©rations sur les contacts.

Concepts Go utilis√©s (√† retenir):
- map[int]Contact pour stocker les contacts en m√©moire.
- boucle for {} et switch pour le menu.
- bufio.NewReader(os.Stdin) + ReadString pour la saisie utilisateur.
- strconv.Atoi et strings.TrimSpace pour parser les entr√©es.
- package flag pour g√©rer les flags CLI.
- "comma ok idiom" (ex: v, ok := mymap[id]) pour v√©rifier l'existence d'une cl√©.

Limitations connues:
- Les contacts sont stock√©s uniquement en m√©moire : toutes les donn√©es sont perdues √† la fermeture.
- Les IDs sont g√©n√©r√©s de mani√®re simple (len(contacts)+1) : apr√®s suppression, il peut y avoir des trous dans la num√©rotation.
- Pas de validation avanc√©e d'email ni de persistance (JSON / fichier) pour le moment.

Comment ex√©cuter (PowerShell, depuis le dossier TP1)
- Ex√©cution interactive :
  go run main.go (ou go run .)

- Ajouter un contact via flags (sans entrer dans le menu) :
  go run main.go --ajouter --nom="Tanjiro" --email="tanjiro@kimetsu.jp"

- Compiler un ex√©cutable :
  go build 

Objectifs p√©dagogiques:
- S'initier aux bases de Go : types, maps, entr√©es/sorties, parsing, flags et idiomes courants.
- Produire un outil CLI simple respectant les consignes du TP.

Am√©liorations possibles (si extension):
- Sauvegarde/chargement JSON pour persistance.
- Validation d'email et sanitization.
- Tri des contacts et pagination.
- Tests unitaires pour add/update/delete/list.

Auteur :
Fairytale-Dev (Farid-Efrei) üò∏
Exercice r√©alis√© pour le cours Golang (EFREI) ‚Äî TP1.

ü¶ã Paix √† tous ü¶ã